{
  "name": "cadence",
  "displayName": "Cadence",
  "publisher": "onflow",
  "description": "This extension integrates Cadence, the resource-oriented smart contract programming language of Flow, into Visual Studio Code.",
  "version": "0.7.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/onflow/vscode-cadence.git"
  },
  "scripts": {
    "vscode:prepublish": "npm run -S esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run -S esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run -S esbuild-base -- --sourcemap --watch",
    "check": "tsc src/extension.ts",
    "unit-test": "ts-mocha **/*.unit.test.ts",
    "integration-test": "npm run esbuild && tsc -p ./ && node ./out/test/run-test.js",
    "package": "./node_modules/.bin/vsce package",
    "package-test": "./node_modules/.bin/vsce package --out ./src/test/fixtures/workspace/cadence.vsix",
    "secure": "snyk protect",
    "lint": "ts-standard && snyk protect --fail-on=all",
    "vscode-start": "docker-compose up -d && docker exec vscode code-server --install-extension /source/cadence.vsix",
    "vscode-stop": "docker-compose down",
    "cypress": "./node_modules/.bin/cypress run",
    "e2e-test": "npm run package-test && npm run vscode-start && npm run cypress && npm run vscode-stop"
  },
  "engines": {
    "vscode": "^1.65.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "icon": "icon.png",
  "activationEvents": [
    "onLanguage:cadence",
    "onCommand:cadence.restartServer",
    "onCommand:cadence.runEmulator",
    "onCommand:cadence.stopEmulator",
    "onCommand:cadence.createAccount",
    "onCommand:cadence.switchActiveAccount"
  ],
  "main": "./out/main.js",
  "contributes": {
    "commands": [
      {
        "command": "cadence.restartServer",
        "category": "Cadence",
        "title": "Restart language server"
      },
      {
        "command": "cadence.runEmulator",
        "category": "Cadence",
        "title": "Run emulator"
      },
      {
        "command": "cadence.stopEmulator",
        "category": "Cadence",
        "title": "Stop emulator"
      },
      {
        "command": "cadence.createAccount",
        "category": "Cadence",
        "title": "Create account"
      },
      {
        "command": "cadence.switchActiveAccount",
        "category": "Cadence",
        "title": "Switch account"
      }
    ],
    "configuration": {
      "title": "Cadence",
      "properties": {
        "cadence.flowCommand": {
          "type": "string",
          "default": "flow",
          "description": "The command to invoke the Flow CLI",
          "scope": "resource"
        },
        "cadence.customConfigPath": {
          "type": "string",
          "default": "",
          "description": "Custom flow.json path",
          "scope": "resource"
        },
        "cadence.enableCustomConfigPath": {
          "type": "boolean",
          "default": false,
          "description": "Enable custom flow.json path",
          "scope": "resource"
        },
        "cadence.numAccounts": {
          "type": "number",
          "default": 3,
          "description": "The number of default accounts to create",
          "scope": "resource"
        },
        "cadence.accessCheckMode": {
          "type": "string",
          "default": "strict",
          "enum": [
            "strict",
            "notSpecifiedRestricted",
            "notSpecifiedUnrestricted",
            "none"
          ],
          "enumDescriptions": [
            "Access modifiers are required and always enforced",
            "Access modifiers are optional. Access is assumed private if not specified",
            "Access modifiers are optional. Access is assumed public if not specified",
            "Access modifiers are optional and ignored"
          ],
          "description": "Configures if access modifiers are required and how they are are enforced",
          "scope": "resource"
        },
        "cadence.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the Cadence language server."
        }
      }
    },
    "languages": [
      {
        "id": "cadence",
        "extensions": [
          ".cdc"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "cadence",
        "scopeName": "source.cadence",
        "path": "./syntaxes/cadence.tmGrammar.json"
      },
      {
        "scopeName": "markdown.cadence.codeblock",
        "path": "./syntaxes/codeblock.json",
        "injectTo": [
          "text.html.markdown"
        ],
        "embeddedLanguages": {
          "meta.embedded.block.cadence": "cadence"
        }
      }
    ]
  },
  "devDependencies": {
    "@types/glob": "^7.1.4",
    "@types/mocha": "^2.2.42",
    "@types/node": "^10.12.21",
    "@types/vscode": "^1.65.0",
    "@vscode/test-electron": "^1.6.2",
    "cypress": "^8.3.0",
    "esbuild": "^0.14.42",
    "glob": "^7.1.7",
    "mocha": "^9.0.3",
    "nyc": "^15.1.0",
    "snyk": "^1.316.1",
    "ts-mocha": "^9.0.0",
    "ts-standard": "^11.0.0",
    "typescript": "~4.3.0"
  },
  "dependencies": {
    "@onflow/decode": "0.0.11",
    "ansi-regex": "^6.0.1",
    "vsce": "^2.9.1",
    "vscode-languageclient": "^8.0.1"
  },
  "snyk": true
}
